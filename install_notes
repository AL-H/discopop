There are multiple requirements which need to be installed before proceeding.

MAC OS X
=============
https://git.skewed.de/count0/graph-tool/wikis/installation-instructions#native-installation

brew install llvm
export HOMEBREW_CC="/usr/local/Cellar/llvm/6.0.1/bin/clang-6.0"
export HOMEBREW_CXX="/usr/local/Cellar/llvm/6.0.1/bin/clang++"

brew install python
brew install boost --with-python
pip install numpy scipy matplotlib pycairo
brew install CGAL
brew install sparsehash
brew install expat
brew install gtk+3
brew install cairomm
brew install google-sparsehash
brew install pycairo
brew install py2cairo
brew install pygobject3 --with-python@2 gtk+3
brew reinstall libffi
export PKG_CONFIG_PATH="/usr/local/opt/libffi/lib/pkgconfig"

pip install pygobject

mkdir build
./configure CXX="/usr/local/Cellar/llvm/6.0.1/bin/clang++" --prefix=<path-to-build>/build --with-python-module-path=<path_to_vnenv>/venv/lib/python2.7/site-packages --enable-openmp
make
make install


Linux
========
https://gist.github.com/floriangeigl/ee222e581b04a0d7922c


https://www.slideshare.net/moskytw/graphtool-in-practice


Questions
===========
- Can we assume that every cu only has dummy children?
- To coarsen the graph, can we merge/remove loop-related dummy cus? (for.end, for.ind, etc.)
- Check the TODO in pattern_detection.py
- We merge the dependencies of the children of a loop node. How about functions?

Node firstNode = nodeMapComputed.find(subNodes.front())->second;
Node lastNode = nodeMapComputed.find(subNodes.back())->second;

// create graph vector
vector<float> pat_arr;
for (int i = 0; i < subNodes.size() - 1; i++) {
    pat_arr.push_back(1.0);
}

// create app vector
vector<float> app_arr;
for (int i = 0; i < subNodes.size() - 1; i++) {
    app_arr.push_back(0.0);
}

float weight = 1.0;
unsigned long denom = subNodes.size() - 1;
map<int, vector<string>> stages;
